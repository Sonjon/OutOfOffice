@page "/EmployeeCreator"
@using System.ComponentModel.DataAnnotations;
@using Data;
@using Backend;
@using OutOfOffice.Components.Repository.Interfaces;

@inject IEmployeeRepository employeeRepository

<PageTitle>Add new employee</PageTitle>

<EditForm Model=@newPerson OnValidSubmit=@ValidFormSubmitted OnInvalidSubmit=@InvalidFormSubmitted>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Name">Name</label>
        <InputText @bind-Value=newPerson.Full_Name class="form-control" id="Full Name" />
    </div>
    <div class="form-group">
        <label for="Subdivision">Subdivision</label>
        <InputText @bind-Value=newPerson.Subdivision class="form-control" id="Subdivision" />
    </div>
    <div class="form-group">
        <label for="Position">Position</label>
        <InputSelect @bind-Value="@newPerson.Position" class="form-control" id="Position">
            <option value=0></option>
            @foreach (var value in Positions.getStringList())
            {
                <option value=@value.ToString().Replace("_", " ")>@value.ToString().Replace("_", " ")</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="Status">Status</label>
        <InputSelect @bind-Value=newPerson.Status class="form-select" id="Status">
            @foreach (var value in ActiveStatus.getStringList())
            {
                <option value="@value">@value</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="Manager">Manager</label>
        <select @bind=newPerson.Manager class="form-control" id="Manager">
            <option value=0></option>
            @foreach (EmployeeData manager in managers)
            {
                <option value=@manager.ID>@manager.Full_Name</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="Vacation">Vacation</label>
        <InputNumber @bind-Value=newPerson.Vacation class="form-control" id="Vacation" />
    </div>
    <input type="submit" class="btn btn-primary" value="Save" />
</EditForm>
<ResultMessage show_alert=@show_alert sucess=@sucess Sucess_message="Adding employee ended with sucess" Failuer_message="Something went wrong when adding employee"></ResultMessage>

@code {
    EmployeeData newPerson = new EmployeeData();
    List<EmployeeData> managers = new List<EmployeeData>();
    bool show_alert = false;
    bool sucess = false;

    protected override async Task OnInitializedAsync()
    {
        newPerson.Status = ActiveStatus.Active;
        managers = await employeeRepository.GetAllHRManager();
    }

    async void ValidFormSubmitted(EditContext editContext)
    {
        sucess = await employeeRepository.Create(newPerson);
        show_alert = true;
        StateHasChanged();
    }

    void InvalidFormSubmitted(EditContext editContext)
    {
        show_alert = true;
        sucess = false;
        StateHasChanged();
    }
}