@page "/EmployeeCreator"
@using System.ComponentModel.DataAnnotations;
@using Data;
@using Backend;

<PageTitle>Add new employee</PageTitle>

<EditForm Model=@newPerson OnValidSubmit=@ValidFormSubmitted OnInvalidSubmit=@InvalidFormSubmitted>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Name">Name</label>
        <InputText @bind-Value=newPerson.Full_Name class="form-control" id="Full Name" />
    </div>
    <div class="form-group">
        <label for="Subdivision">Subdivision</label>
        <InputText @bind-Value=newPerson.Subdivision class="form-control" id="Subdivision" />
    </div>
    <div class="form-group">
        <label for="Position">Position</label>
        <InputText @bind-Value=newPerson.Position class="form-control" id="Position" />
    </div>
    <div class="form-group">
        <label for="Status">Status</label>
        <InputSelect @bind-Value=newPerson.Status class="form-select" id="Status">
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="Manager">Manager</label>
        <select @bind=newPerson.Manager class="form-control" id="Manager">
            <option value=0></option>
            @foreach(Employee manager in managers)
            {
                <option value=@manager.ID>@manager.Full_Name</option>
            }

        </select>
    </div>
    <div class="form-group">
        <label for="Vacation">Vacation</label>
        <InputNumber @bind-Value=newPerson.Vacation class="form-control" id="Vacation" />
    </div>
    <input type="submit" class="btn btn-primary" value="Save" />
</EditForm>

@code {
    Employee newPerson = new Employee();
    List<Employee> managers = new List<Employee>();

    string LastSubmitResult;

    protected override async Task OnInitializedAsync()
    {
        newPerson.Status = EmploymentStatus.Active;
        managers = await Backend.GetEmployeesAsync();
    }

    void ValidFormSubmitted(EditContext editContext)
    {
        //popup menu with success
        LastSubmitResult = "OnValidSubmit was executed";
        Backend.Add_Employee(newPerson);
    }

    void InvalidFormSubmitted(EditContext editContext)
    {
        //popup menu with error
        LastSubmitResult = "OnInvalidSubmit was executed";
    }
}